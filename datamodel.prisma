type Schedule { # Each record of this type is one single time a user has scheduled a workout/s.
	id: ID! @unique
	time: String!
	workouts: [Workout!]!
	completed: Boolean @default(value: false) # User may or may not want to track which Workouts they attend.
	user: User!
	createdAt: DateTime!
	updatedAt: DateTime!
}

type Workout { # A workout that is named, and has exercises under it.
	id: ID! @unique
	name: String!
	exercises: [Exercise!]!
	completed: Boolean @default(value: false)
	schedule: Schedule
	createdAt: DateTime!
	updatedAt: DateTime!
}

type SavedWorkout { # This is a workout the user has saved, so they can easily add it to any day instead of having to create it over and over.
	id: ID! @unique
	name: String!
	exercises: [Exercise!]!
	user: User!
	createdAt: DateTime!
	updatedAt: DateTime!
}

type Exercise { # One exercise.
	id: ID! @unique
	name: String!
	sets: Int
	reps: Int
	intervals: Int
	duration: Float
	intensity: Int
	completed: Boolean @default(value: false) # Users can track which exercises and workouts that are completed.
	workout: Workout
	savedWorkout: SavedWorkout
	createdAt: DateTime!
	updatedAt: DateTime!
}

type User { # User model.
	id: ID! @unique
	schedules: [Schedule!]!
	savedWorkouts: [SavedWorkout!]!
	notes: [Note!]!
	bodyMetrics: [BodyMetric!]!
	bodyMeasurements: [BodyMeasurement!]!
	authId: String! @unique
	premium: Boolean @default(value: false) #no free lunch bb
	createdAt: DateTime!
	updatedAt: DateTime!
}

type Note { # A user can write a note about a single scheduled workout time, or a workout.
	id: ID! @unique
	note: String!
	workout: Workout
	createdBy: User!
	schedule: Schedule
	createdAt: DateTime!
	updatedAt: DateTime!
}

type BodyMetric {
	id: ID! @unique
	weight: Float
	height: Float
	bodyfat: Float #User could enter a number representing the % of body fat.
	user: User!
	createdAt: DateTime!
	updatedAt: DateTime!
}

type BodyMeasurement {
	id: ID! @unique
	hips: Float
	waist: Float
	rightArm: Float
	leftArm: Float
	rightLeg: Float
	leftLeg: Float
	user: User!
	createdAt: DateTime!
	updatedAt: DateTime!
}
